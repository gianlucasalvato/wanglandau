#!/bin/bash

exit_status=0	

echo "Running batch process"

if [ ! -d TEX ]; then mkdir TEX; fi;	
if [ ! -d PDF ]; then mkdir PDF; fi;

find EPS -name "*.eps" | while read epsf; do

	fileb=${epsf/EPS\//}
	fileb=${fileb/.eps/}
	fileb=${fileb#./}
	
	texf=TEX/$fileb.tex
	dvif=$fileb.dvi
	pdff=PDF/$fileb.pdf

 	if [ -e "$dvif" ]; then rm "$dvif"; fi
 	
 	if [ "$1" == "texs" ]; then 
 		if [ ! -e "$texf" ]; then
			echo "%TAG_BEGIN: autogenerated with a shell script"	 > $texf
			echo "\documentclass{article}" 							>> $texf
			echo "\usepackage{graphics}"							>> $texf
			echo "\usepackage{overpic}"								>> $texf
			echo 													>> $texf
			echo "\begin{document}" 								>> $texf
			echo "\center"											>> $texf
			echo "\thispagestyle{empty}"							>> $texf
			echo "	\begin{overpic}[width=\textwidth]{$epsf}"		>> $texf
			echo "		\put(xx,yy){text}"							>> $texf
			echo "	\end{overpic}"									>> $texf
			echo "\end{document}"									>> $texf
			echo "%TAG_END: autogenerated with a shell script" 		>> $texf
		fi
	else
  		echo "Creating dvi from $texf"
  		latex -shell-escape "$texf"
  		if [ $? = 0 ]; then 
  			pdfff="${dvif/.dvi/.pdf}"
  			
  			echo "Converting $dvif to pdf."
 			dvipdf "$dvif"
  			if [ $? == 0 ]; then 
				pdfcrop --margin '3 3 3 3' $fileb.pdf $pdff
				rm $fileb.pdf
  				echo "$pdff created."
  			else
  				echo "Cannot convert $dvif to pdf"
  				exit_status=1
  				exit $exit_status
  			fi
  		else
  			echo "Cannot create dvi from $dvif"
  			exit_status=1
			exit $exit_status
  		fi
  		
  		if [ $? == 0 ]; then rm "$fileb.aux" "$fileb.log" "$fileb.dvi"; fi
  	fi
done

if [ $exit_status != 0 ]; then echo "Cannot complete batch process. Quit."; fi

exit $exit_status
